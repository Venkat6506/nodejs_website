name: A2Z_WORKFLOW
on: workflow_dispatch
jobs:   
  PRECOMMIT:
    name: PRECOMMIT
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
#     - uses: pre-commit/action@v3.0.0 # need to uncomment to run pre-commit.

  SYNK_SCAN:
    name: SYNK_SCAN
    runs-on: ubuntu-latest
    needs: PRECOMMIT
    steps:
    - uses: actions/checkout@master
    - name: npm install, build
      run: |
          sudo apt install nodejs -y 
          sudo apt install npm -y
          npm install
          npm run build --if-present
    - uses: snyk/actions/setup@master
    - uses: actions/setup-go@v1
      with:
        go-version: '1.13'
    - name: Snyk monitor
      run: snyk test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
  SONARQUBE:
    name: SAST_SCAN_SONARQUBE
    runs-on: ubuntu-latest
    needs: PRECOMMIT
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}

  OWASP:
    name: OWASP_ZAP_SCAN
    runs-on: ubuntu-latest
    needs: PRECOMMIT
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: main
    - name: ZAP Scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://54.90.39.95:3000/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

  CI:
    name: CI
    runs-on: ubuntu-latest
    needs: OWASP
    steps:
    - name: c
      uses: actions/checkout@v3
    - name: npm install, build
      run: |
        sudo apt install nodejs -y 
        sudo apt install npm -y
        npm install
        npm run build --if-present
    - name: Upload Articats
      uses: actions/upload-artifact@v3
      with:
        name: kvg
        path: ./
        
  POST_CD: 
    name: POST_CD
    runs-on: ubuntu-latest
    needs: CI
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: kvg
        path: ./
    - name: Deploy to my EC2 instance
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: "ec2-54-90-39-95.compute-1.amazonaws.com"
          REMOTE_USER: "ubuntu"
          TARGET: "/home/ubuntu/nodejs_website"
